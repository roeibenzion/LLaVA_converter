
FROM mcr.microsoft.com/devcontainers/base:ubuntu-20.04

SHELL [ "bash", "-c" ]

# Update apt and install necessary packages
RUN apt update && \
    apt install -yq \
        ffmpeg \
        dkms \
        build-essential \
        jq \
        jp \
        tree \
        tldr \
        curl \
        wget \
        git

# Install git-lfs
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash && \
    sudo apt-get install -yq git-lfs && \
    git lfs install

############################################
# Setup user
############################################

USER vscode

# Setup conda environment
RUN cd /tmp && \
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash ./Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda3 && \
    rm ./Miniconda3-latest-Linux-x86_64.sh

# Add conda to PATH
ENV PATH="/home/vscode/miniconda3/bin:${PATH}"

# Setup Python environment (modify based on project's requirements)
COPY cog.yaml /tmp/environment.yaml
RUN conda env create -n llava_yaml -f /tmp/environment.yaml && \
    conda clean -afy

# Activate conda environment by default
#RUN echo "source activate $(head -1 /tmp/environment.yaml | cut -d' ' -f2)" >> ~/.bashrc

# Install dotnet
RUN cd /tmp && \
    wget https://dot.net/v1/dotnet-install.sh && \
    chmod +x dotnet-install.sh && \
    ./dotnet-install.sh --channel 7.0 && \
    ./dotnet-install.sh --channel 3.1 && \
    rm ./dotnet-install.sh

# Set working directory
WORKDIR /app

# Copy project files into container
COPY . /app

USER root
# Ensure script is executable
RUN chmod +x ./scripts/v1_5/anyres_pretrain.sh
USER vscode
# Entry point
# Explicitly set entrypoint to activate conda environment
ENTRYPOINT ["bash", "-c", "source activate llava_yaml && bash -x ./scripts/v1_5/anyres_pretrain.sh"]

